{"version":3,"sources":["components/note-list/__note-item/styles.js","components/note-list/__note-item/NoteItem.jsx","components/note-list/NoteList.jsx","components/displayed-note/styles.js","components/displayed-note/DisplayedNote.jsx","pages/myNotes/styles.js","pages/myNotes/myNotes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Styles","itemWrapper","backgroundColor","color","padding","margin","borderRadius","display","justifyContent","itemTitle","textTransform","fontWeight","fontSize","closeButton","height","itemWrapper_active","boxShadow","transition","NoteItem","totalWrapperStyle","note","onSelect","isActive","style","onClick","bind","itemContent","title","description","length","substring","creation","Button","NoteList","notes","map","index","wrapper","lineHeight","noteTitle","noteDescription","noteCreation","textAlign","marginTop","noNoteMessage","DisplayedNote","activeNote","noteList","width","minWidth","sideInfoDisplay","sideNotePanel","MyNotes","Date","toDateString","React","useState","setNoteList","setActiveNote","minHeight","selectedNote","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d9b11f8.chunk.js","sourcesContent":["export const Styles = {\r\n  itemWrapper: {\r\n    backgroundColor: '#333333',\r\n    color: '#609BEB',\r\n    padding: '10px',\r\n    margin: '10px',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n\r\n  itemTitle: {\r\n      textTransform: 'uppercase',\r\n      fontWeight: 'bold',\r\n      fontSize: '24px',\r\n      margin: '5px 0',\r\n  },\r\n\r\n  closeButton: {\r\n    margin: '45px 0',\r\n    color: '#609BEB',\r\n    backgroundColor: 'transparent',\r\n    height: '30px',\r\n  },\r\n\r\n  itemWrapper_active: {\r\n    backgroundColor: 'rgb(255,255,255, 0.2)',\r\n    color: '#f1c40f',\r\n    boxShadow: '#f1c40f 0 0 5px',\r\n    transition: '0.3s',\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Styles } from './styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction NoteItem({ note, onSelect }) {\r\n  let totalWrapperStyle;\r\n\r\n  if (note.isActive) {\r\n    totalWrapperStyle = { ...Styles.itemWrapper, ...Styles.itemWrapper_active };\r\n  } else {\r\n    totalWrapperStyle = { ...Styles.itemWrapper };\r\n  }\r\n\r\n  return (\r\n    <div style={totalWrapperStyle} onClick={onSelect.bind(null, note)}>\r\n      <div style={Styles.itemContent}>\r\n        <p style={Styles.itemTitle}>{note.title}</p>\r\n        <p>\r\n          {note.description.length < 20\r\n            ? note.description\r\n            : note.description.substring(0, 20) + '...'}\r\n        </p>\r\n        <p>\r\n          {note.creation}\r\n        </p>\r\n      </div>\r\n      <Button style={Styles.closeButton}>&#10008;</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nNoteItem.propTypes = {\r\n  note: PropTypes.object.isRequired,\r\n  onSelect: PropTypes.func,\r\n};\r\n\r\nexport default NoteItem;\r\n","import React from 'react';\r\nimport NoteItem from './__note-item/NoteItem';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction NoteList({ style, notes, onSelect }) {\r\n  return (\r\n    <div style={style}>\r\n      {notes.map((note, index) => {\r\n        return <NoteItem note={note} key={index} onSelect={onSelect}></NoteItem>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nNoteList.propTypes = {\r\n  style: PropTypes.object.isRequired,\r\n  notes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default NoteList;\r\n","export const Styles = {\r\n  wrapper: {\r\n    boxShadow: '#609BEB 0 0 7px 2px',\r\n    margin: '20px',\r\n    padding: '5px 25px',\r\n    borderRadius: '5px',\r\n    lineHeight: '20px',\r\n    transition: 'box-shadow 0.3s',\r\n  },\r\n\r\n  noteTitle: {\r\n    fontSize: '48px',\r\n  },\r\n\r\n  noteDescription: {\r\n    fontSize: '28px',\r\n  },\r\n\r\n  noteCreation: {\r\n    fontSize: '20px',\r\n    textAlign: 'right',\r\n    marginTop: '100px',\r\n  },\r\n\r\n  noNoteMessage: {\r\n      fontSize: '40px',\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Styles } from './styles'\r\n\r\nfunction DisplayedNote({ activeNote }) {\r\n  return (\r\n    <div style={Styles.wrapper}>\r\n      {activeNote === null ? (\r\n        <p style={Styles.noNoteMessage}>Select note to display</p>\r\n      ) : (\r\n        <div>\r\n          <p style={Styles.noteTitle}>{activeNote.title}</p>\r\n          <p style={Styles.noteDescription}>{activeNote.description}</p>\r\n          <p style={Styles.noteCreation}>{activeNote.creation}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nDisplayedNote.propTypes = {\r\n  activeNote: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default DisplayedNote;\r\n","export const Styles = {\r\n  noteList: {\r\n    width: '25vw',\r\n    minWidth: '280px',\r\n    margin: '0 auto',\r\n  },\r\n\r\n  sideInfoDisplay: {\r\n    backgroundColor: '#282828',\r\n    color: 'rgb(255, 255, 255, 0.6)',\r\n    width: '100%',\r\n  },\r\n\r\n  sideNotePanel: {\r\n    width: '27vw',\r\n  }\r\n};\r\n","import React from 'react';\r\nimport NoteList from '../../components/note-list/NoteList';\r\nimport DisplayedNote from '../../components/displayed-note/DisplayedNote';\r\nimport { Styles } from './styles';\r\n\r\nfunction MyNotes() {\r\n  const notes = [\r\n    {\r\n      title: 'Finish task 1 React',\r\n      description:\r\n        'React is sooooooooooooooooooooooooooooo cooooooooooooooooooool!!!',\r\n      creation: new Date('July 7, 2021 15:45:00').toDateString(),\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: 'Have a lunch',\r\n      description: 'Some meat balls are waiting for me..',\r\n      creation: new Date('July 7, 2021 16:00:00').toDateString(),\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: 'Just an empty note',\r\n      description: 'Almost empty',\r\n      creation: new Date().toDateString(),\r\n      isActive: false,\r\n    },\r\n  ];\r\n\r\n  const [noteList, setNoteList] = React.useState(notes);\r\n  const [activeNote, setActiveNote] = React.useState(null);\r\n\r\n  function onSelectNote(selectedNote) {\r\n    setNoteList(\r\n      noteList.map((note) => {\r\n        if (note === selectedNote) {\r\n          note.isActive = true;\r\n          setActiveNote(selectedNote);\r\n        } else {\r\n          note.isActive = false;\r\n        }\r\n        return note;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', minHeight: '100vh' }}>\r\n      <div style={Styles.sideNotePanel}>\r\n        <NoteList\r\n          style={Styles.noteList}\r\n          notes={noteList}\r\n          onSelect={onSelectNote}\r\n        ></NoteList>\r\n      </div>\r\n      <div style={Styles.sideInfoDisplay}>\r\n        <DisplayedNote activeNote={activeNote}></DisplayedNote>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyNotes;\r\n","import React from 'react';\r\nimport MyNotes from './pages/myNotes/myNotes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{backgroundColor: '#1f1f1f', minHeight: '100vh'}}>\r\n      <MyNotes></MyNotes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}